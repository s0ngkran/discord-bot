kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: pvc-discord-c1
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: local-storage
  resources:
    requests:
      storage: 50Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: my-app1
  name: my-app1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: my-app1
  strategy: {}
  template:
    metadata:
      labels:
        app: my-app1
    spec:
      containers:
      - image: temp-discord-c1
        name: temp-discord-c1
        imagePullPolicy: IfNotPresent # for local image
        resources: {}
        ports:
        - containerPort: 8000
        volumeMounts:
        - name:  discord-c1-storage
          mountPath: "/myproject/db"
      volumes:
        - name: discord-c1-storage
          persistentVolumeClaim:
            claimName: pvc-discord-c1


# status: {}

# ---
# for service for backend
# apiVersion: v1
# kind: Service
# metadata:
#   name: discord-c1-svc
# spec:
#   type: NodePort
#   ports:
#   - port: 8000
#     protocol: TCP
#     nodePort: 30001
#   selector:
#     app: my-app 

# # # do pv
# ---
# apiVersion: v1
# kind: PersistentVolume
# metadata:
#   name: pv-discord-c1
#   labels:
#     type: local
# spec:
#   accessModes:
#     - ReadWriteOnce
#   capacity:
#     storage: 100Mi
#   persistentVolumeReclaimPolicy: Delete
#   # nfs:
#   #   server: 172.16.94.5
#   #   path: "/export/volumes/pod"
#   hostPath:
#     path: "/Users/walter/Desktop/mac_m1_db"


## do pvc
# kind: PersistentVolumeClaim
# apiVersion: v1
# metadata:
#   name: pvc-discord-c1
# spec:
#   accessModes:
#     - ReadWriteOnce
#   storageClassName: local-storage
#   resources:
#     requests:
#       storage: 50Mi


#https://github.com/marcel-dempers/docker-development-youtube-series/blob/master/kubernetes/persistentvolume/postgres-with-pv.yaml